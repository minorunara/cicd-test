name: CI for FizzBuzz

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 2  # タイムアウト設定（1分）

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install flake8 pylint mypy bandit pytest

      - name: Run flake8 (Style Check)
        run: |
          set -euxo pipefail
          source venv/bin/activate
          flake8 --format='::error file=%(path)s,line=%(row)d,col=%(col)d::%(code)s: %(text)s' fizzbuzz.py || true
        continue-on-error: true

      - name: Run pylint (Code Quality)
        run: |
          set -euxo pipefail
          source venv/bin/activate
          pylint --fail-under=7 fizzbuzz.py > pylint_report.txt || true
        continue-on-error: true

      - name: Run mypy (Type Check)
        run: |
          set -euxo pipefail
          source venv/bin/activate
          mypy --show-column-numbers --show-error-context fizzbuzz.py | awk -F: '{print "::error file="$1",line="$2",col="$3"::"$4}' || true
        continue-on-error: true

      - name: Run bandit (Security Check)
        run: |
          set -euxo pipefail
          source venv/bin/activate
          bandit -r fizzbuzz.py
        continue-on-error: true

      - name: Run tests
        run: |
          set -euxo pipefail
          source venv/bin/activate
          pytest tests/
